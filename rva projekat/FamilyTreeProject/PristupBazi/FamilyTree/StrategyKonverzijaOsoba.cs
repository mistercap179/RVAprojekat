///////////////////////////////////////////////////////////
//  StrategyKonverzijaOsoba.cs
//  Implementation of the Class StrategyKonverzijaOsoba
//  Generated by Enterprise Architect
//  Created on:      06-okt-2021 14:41:30
//  Original author: AB
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using FamilyTree;
using PristupBazi;
using System.Linq;

namespace FamilyTree {
	public class StrategyKonverzijaOsoba : IKonverzijaObjekta {

		public StrategyKonverzijaOsoba(){}

		~StrategyKonverzijaOsoba(){}

		public ObjekatSistema modeluObjekat(Model model){

			StrategyKonverzijaBiografija konverzijaBiografija = new StrategyKonverzijaBiografija();
			Person person = new Person();
			OsobaT osobaT = (OsobaT)model;

			person.IdP = osobaT.id;
			person.Ime = osobaT.ime;
			person.Adresa = osobaT.adresa;
			person.BrojTelefona = osobaT.telefon;
			person.Prezime = osobaT.prezime;
			person.Email = osobaT.email;
			using (var db = new DataBase())
			{
				person.m_Biography = (Biography)konverzijaBiografija.modeluObjekat(db.BiografijaT.Where(x => x.id == osobaT.idB).First()); 
			}
			List<OsobaT> r;
			List<OsobaT> c;
			List<OsobaT> s;


			using (var db = new DataBase())
			{
				// roditelj
				r = db.OsobaT.Where(x => x.id == osobaT.idR).ToList();
				c = db.OsobaT.Where(x => x.idR == osobaT.id).ToList();
				s = db.OsobaT.Where(x => x.id == osobaT.idS).ToList();
			}
			
			if (r.Count() != 0)
			{
				person.Parent = ModelUObjekatInfo(r.First());
			}
			else
			{
				person.Parent = null;
			}

			if (c.Count() != 0)
			{
				person.Child = ModelUObjekatInfo(c.First());
			}
			else
			{
				person.Child = null;
			}

			if (s.Count() != 0)
			{
				person.Spouse = ModelUObjekatInfo(s.First());
			}
			else
			{
				person.Spouse = null;
			}
			
			return person;
		}

		public Model objekatuModel(ObjekatSistema obj)
		{
			OsobaT osoba = new OsobaT();
			Person person = (Person)obj;

			osoba.id = person.IdP;
			osoba.ime = person.Ime;
			osoba.prezime = person.Prezime;
			osoba.telefon = person.BrojTelefona;
			osoba.adresa = person.Adresa;
			osoba.email = person.Email;
			osoba.idB = person.m_Biography.IdB;
			if(person.Parent != null)
			{
				osoba.idR = person.Parent.IdP;
			}
			else
			{
				osoba.idR = null;
			}
			if(person.Spouse != null)
			{
				osoba.idS = person.Spouse.IdP;
			}
			else
			{
				osoba.idS = null;
			}

			return (Model)osoba;
		}

		private Person ModelUObjekatInfo(OsobaT osoba)
		{
			IKonverzijaObjekta konv = new StrategyKonverzijaBiografija();
			Biography b = null;

			using (var db = new DataBase())
			{
				var q = db.BiografijaT.Where(x => x.id == osoba.idB);			// biografija zbog usinga gore

				if (q.Count() > 0)
					b = (Biography)konv.modeluObjekat(q.First());
			}

			return new Person()
			{
				Adresa = osoba.adresa,
				BrojTelefona = osoba.telefon,
				Email = osoba.email,
				Ime = osoba.ime,
				Prezime = osoba.prezime,
				IdP = osoba.id,
				m_Biography = b
			};
		}


	}//end StrategyKonverzijaOsoba

}//end namespace FamilyTree
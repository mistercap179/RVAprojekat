///////////////////////////////////////////////////////////
//  OsobaInvoker.cs
//  Implementation of the Class OsobaInvoker
//  Generated by Enterprise Architect
//  Created on:      06-okt-2021 14:41:29
//  Original author: AB
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using FamilyTree;
namespace FamilyTree {
	public class OsobaInvoker {
		// a, b, c, d, e, f

		private static List<OsobaKomanda> history = new List<OsobaKomanda>();
		private static int br = 0;
		public OsobaInvoker(){
	    }

		~OsobaInvoker(){}

		/// 
		/// <param name="komanda"></param>
		public void AddAndExecute(OsobaKomanda komanda)
		{
			if (history.Count > 0 && br < history.Count -1 )
				history.RemoveRange(br + 1, history.Count - br + 1);

			history.Add(komanda);
			komanda.Execute();

			br = history.Count - 1;
		}

		public void Redo(){
			if (history.Count > 0 && br < history.Count)
				history[++br].Execute();
		}

		public void Undo(){
			if (history.Count > 0 && br > -1)
				history[br--].UnExecute();
		}

	}//end OsobaInvoker

}//end namespace FamilyTree